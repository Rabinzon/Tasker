include /mixins/cardModal

mixin asignToMenu(props)
    .dropdown-menu.dropdown-menu-righ
      +formFor(f, {url: urlFor('editTask', props.id, {query: '_method=patch'}), method: 'post'}).px-2
        select(name='form[assignedToId]').custom-select.mb-2
          option(value='') assign to
          each user in users || []
            option(value=user.id selected=user.id === props.assignedToId)=user.fullName

        +button(f, 'submit').btn-primary.btn-block.btn-sm
          | Assign

mixin addTagBtn(props, taskId)
  .d-inline-flex
    +formFor(f, {url: urlFor('addTagToTask', taskId, props.id), method: 'post'})
      button.badge.border-0(class='badge-' + props.color)(type='submit')=props.name
    +formFor(f, {url: urlFor('deleteTag', props.id, {query: '_method=delete'}), method: 'post'})
      button.badge.border-0.badge-dark(type="submit") x

mixin removeTagBtn(props, taskId)
  +formFor(f, {url: urlFor('removeTagToTask', taskId, props.id, {query: '_method=delete'}), method: 'post'}).d-inline-flex
    button.border-0.badge.badge-info(type='submit')=props.name + ' x'

mixin tagColorsSelect
  - const colors = ['primary', 'secondary', 'success', 'danger', 'warning', 'info', 'light', 'dark']
  .font-weight-bold.w-100 Tag color:
  each color in colors || []
    .form-check.mb-1.mr-1
      input.form-check-input(type='radio', name='form[color]', value=color)
      label.form-check-label(for='form[color]')
        .badge(class='badge-' + color)=color


mixin tags(props)
  each tag in props.Tags || []
    button.border-0.badge(class='badge-' + tag.color)=tag.name

  .dropdown.d-inline
    button.badge.badge-dark(type="button" data-toggle="dropdown")
      a(data-toggle="tooltip" data-placement="top" title="add tag") +
    .dropdown-menu.dropdown-menu-righ.p-1
      .mb-3
        .font-weight-bold Select tag:

        each tag in tags || []
          +addTagBtn(tag, props.id)
      .mt-2
        .font-weight-bold Create new tag:
        +formFor(f, {url: urlFor('tags'), method: 'post'}).form-inline
          +input(f, 'name', {required: true})(placeholder='Tag name').form-control-sm.mr-2.mb-2
          +tagColorsSelect
          +button(f, type='submit').btn-success.btn-sm.mb-2.mt-2 + Create new tag

mixin card(props)
  .card.my-1(data-toggle="modal" data-target='#cardModal' + props.id)
    .card-body
      .d-flex.justify-content-between.align-items-center.mb-2
        .dropdown.d-inline
          button.btn-sm(type="button" data-toggle="dropdown") Move to
          .dropdown-menu.dropdown-menu-righ
            +formFor(f, {url: urlFor('editTask', props.id, {query: '_method=patch'}), method: 'post'}).px-2
              select(name='form[statusId]').custom-select.mb-2
                each column in columns || []
                  option(value=column.id selected=column.id === props.statusId)=column.name
              +button(f, 'submit').btn-primary.btn-block.btn-sm
                | Move
        .d-flex.align-items-center
            if !props.assignedTo
              .dropdown.d-inline
                button.btn-sm.mr-2(type="button" data-toggle="dropdown") Assign to
                +asignToMenu(props)
            if props.assignedTo
              .dropdown.d-inline
                a(data-toggle="dropdown")
                  img.rounded-circle.border.mr-2(
                  src=props.assignedTo.avatar + '?s=30&d=identicon'
                  data-toggle="tooltip"
                  title="assigned to: " + props.assignedTo.fullName
                  )
                +asignToMenu(props)
            img.rounded-circle.border.border-primary(src=props.creator.avatar + '?s=30&d=identicon' data-toggle="tooltip" title="creator: " + props.creator.fullName)

      h6.card-title.mb-0=props.name

      .mb-2
        +tags(props)

      p.card-text=props.text

    +cardModal(props)
